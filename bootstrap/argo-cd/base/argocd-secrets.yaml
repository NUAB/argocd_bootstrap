apiVersion: kubernetes-client.io/v1
kind: ExternalSecret
metadata:
  name: dex-client-secret
  namespace: argocd
spec:
  backendType: secretsManager
  data:
    - key: argocd
      name: dex.github.clientSecret
      property: CLIENT_SECRET
  template:
    metadata:
      labels:
        app.kubernetes.io/part-of: argocd

---
apiVersion: kubernetes-client.io/v1
kind: ExternalSecret
metadata:
  name: githubsecret
  namespace: argocd
spec:
  backendType: secretsManager
  data:
    - key: argocd
      name: sshPrivateKey
      property: SSH_KEY
---
apiVersion: kubernetes-client.io/v1
kind: ExternalSecret
metadata:
  name: prod-cluster
  namespace: argocd
spec:
  backendType: secretsManager
  dataFrom:
    - argocd/clusters/k8s.plint.io
  template:
    metadata:
      labels:
        argocd.argoproj.io/secret-type: cluster
    stringData:
      name: production
      server: <%= data.host %>
      config: |
        {
          "tlsClientConfig": {
            "insecure": false,
            "caData": "<%= data.cluster_ca_certificate %>"
          },
          "awsAuthConfig": {
            "clusterName": "<%= data.name %>",
            "roleARN": "<%= data.role_arn %>"
          }
        }
---
apiVersion: kubernetes-client.io/v1
kind: ExternalSecret
metadata:
  name: staging-cluster
  namespace: argocd
spec:
  backendType: secretsManager
  dataFrom:
    - argocd/clusters/k8s.staging.plint.dev
  template:
    metadata:
      labels:
        argocd.argoproj.io/secret-type: cluster
    stringData:
      name: staging
      server: <%= data.host %>
      config: |
        {
          "tlsClientConfig": {
            "insecure": false,
            "caData": "<%= data.cluster_ca_certificate %>"
          },
          "awsAuthConfig": {
            "clusterName": "<%= data.name %>",
            "roleARN": "<%= data.role_arn %>"
          }
        }
---
apiVersion: kubernetes-client.io/v1
kind: ExternalSecret
metadata:
  name: sprint-cluster
  namespace: argocd
spec:
  backendType: secretsManager
  dataFrom:
    - argocd/clusters/k8s.sprint.plint.dev
  template:
    metadata:
      labels:
        argocd.argoproj.io/secret-type: cluster
    stringData:
      name: sprint
      server: <%= data.host %>
      config: |
        {
          "tlsClientConfig": {
            "insecure": false,
            "caData": "<%= data.cluster_ca_certificate %>"
          },
          "awsAuthConfig": {
            "clusterName": "<%= data.name %>",
            "roleARN": "<%= data.role_arn %>"
          }
        }
---
apiVersion: kubernetes-client.io/v1
kind: ExternalSecret
metadata:
  name: test-cluster
  namespace: argocd
spec:
  backendType: secretsManager
  dataFrom:
    - argocd/clusters/k8s.test.plint.dev
  template:
    metadata:
      labels:
        argocd.argoproj.io/secret-type: cluster
    stringData:
      name: test
      server: <%= data.host %>
      config: |
        {
          "tlsClientConfig": {
            "insecure": false,
            "caData": "<%= data.cluster_ca_certificate %>"
          },
          "awsAuthConfig": {
            "clusterName": "<%= data.name %>",
            "roleARN": "<%= data.role_arn %>"
          }
        }
---
apiVersion: kubernetes-client.io/v1
kind: ExternalSecret
metadata:
  name: nrk-cluster
  namespace: argocd
spec:
  backendType: secretsManager
  dataFrom:
    - argocd/clusters/k8s.nrk.plint.app
  template:
    metadata:
      labels:
        argocd.argoproj.io/secret-type: cluster
    stringData:
      name: nrk
      server: <%= data.host %>
      config: |
        {
          "tlsClientConfig": {
            "insecure": false,
            "caData": "<%= data.cluster_ca_certificate %>"
          },
          "awsAuthConfig": {
            "clusterName": "<%= data.name %>",
            "roleARN": "<%= data.role_arn %>"
          }
        }
---
apiVersion: kubernetes-client.io/v1
kind: ExternalSecret
metadata:
  name: mps-cluster
  namespace: argocd
spec:
  backendType: secretsManager
  dataFrom:
    - argocd/clusters/k8s.mps.plint.app
  template:
    metadata:
      labels:
        argocd.argoproj.io/secret-type: cluster
    stringData:
      name: mps
      server: <%= data.host %>
      config: |
        {
          "tlsClientConfig": {
            "insecure": false,
            "caData": "<%= data.cluster_ca_certificate %>"
          },
          "awsAuthConfig": {
            "clusterName": "<%= data.name %>",
            "roleARN": "<%= data.role_arn %>"
          }
        }
---
apiVersion: kubernetes-client.io/v1
kind: ExternalSecret
metadata:
  name: europarl-cluster
  namespace: argocd
spec:
  backendType: secretsManager
  dataFrom:
    - argocd/clusters/k8s.europarl.plint.app
  template:
    metadata:
      labels:
        argocd.argoproj.io/secret-type: cluster
    stringData:
      name: europarl
      server: <%= data.host %>
      config: |
        {
          "tlsClientConfig": {
            "insecure": false,
            "caData": "<%= data.cluster_ca_certificate %>"
          },
          "awsAuthConfig": {
            "clusterName": "<%= data.name %>",
            "roleARN": "<%= data.role_arn %>"
          }
        }
