---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: github-webhook-server
  namespace: github-runners
  labels:
    app.kubernetes.io/name: actions-runner-controller
    app.kubernetes.io/version: "0.20.3"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: github-webhook-server
rules:
  - apiGroups:
      - actions.summerwind.dev
    resources:
      - horizontalrunnerautoscalers
    verbs:
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - actions.summerwind.dev
    resources:
      - horizontalrunnerautoscalers/finalizers
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - actions.summerwind.dev
    resources:
      - horizontalrunnerautoscalers/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - actions.summerwind.dev
    resources:
      - runnersets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - actions.summerwind.dev
    resources:
      - runnerdeployments
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - actions.summerwind.dev
    resources:
      - runnerdeployments/finalizers
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - actions.summerwind.dev
    resources:
      - runnerdeployments/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - authentication.k8s.io
    resources:
      - tokenreviews
    verbs:
      - create
  - apiGroups:
      - authorization.k8s.io
    resources:
      - subjectaccessreviews
    verbs:
      - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: github-webhook-server
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: github-webhook-server
subjects:
  - kind: ServiceAccount
    name: github-webhook-server
    namespace: github-runners
---
apiVersion: v1
kind: Service
metadata:
  name: github-webhook-server
  namespace: github-runners
  labels:
    app.kubernetes.io/name: actions-runner-controller
    app.kubernetes.io/version: "0.20.3"
spec:
  type: NodePort
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: http
  selector:
    app.kubernetes.io/name: actions-runner-controller
    app.kubernetes.io/instance: github-webhook-server
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: github-webhook-server
  namespace: github-runners
  labels:
    app.kubernetes.io/name: actions-runner-controller
    app.kubernetes.io/version: "0.20.3"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: actions-runner-controller
      app.kubernetes.io/instance: github-webhook-server
  template:
    metadata:
      labels:
        app.kubernetes.io/name: actions-runner-controller
        app.kubernetes.io/instance: github-webhook-server
    spec:
      serviceAccountName: github-webhook-server
      containers:
        - args:
            - "--metrics-addr=127.0.0.1:8080"
            - "--sync-period=10m"
          command:
            - "/github-webhook-server"
          env:
            - name: GITHUB_WEBHOOK_SECRET_TOKEN
              valueFrom:
                secretKeyRef:
                  key: GITHUB_WEBHOOK_SECRET_TOKEN
                  name: github-webhook-server
                  optional: false
          image: "summerwind/actions-runner-controller:v0.20.3"
          name: github-webhook-server
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8000
              name: http
              protocol: TCP
          resources:
            requests:
              memory: 100Mi
              cpu: 20m
        - args:
            - "--secure-listen-address=0.0.0.0:8443"
            - "--upstream=http://127.0.0.1:8080/"
            - "--logtostderr=true"
            - "--v=10"
          image: "quay.io/brancz/kube-rbac-proxy:v0.10.0"
          name: kube-rbac-proxy
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8443
              name: metrics-port
          resources:
            requests:
              memory: 100Mi
              cpu: 20m
      terminationGracePeriodSeconds: 10
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/group.name: default
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/backend-protocol: HTTP
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
    alb.ingress.kubernetes.io/ssl-redirect: "443"
    alb.ingress.kubernetes.io/healthcheck-path: /
  name: github-webhook-server
  namespace: github-runners
spec:
  rules:
    - host: runnerwebhook.infra.plint.dev
      http:
        paths:
          - backend:
              service:
                name: github-webhook-server
                port:
                  name: "http"
            pathType: ImplementationSpecific
  tls:
    - hosts:
        - runnerwebhook.infra.plint.dev
